/* ===================== */
/*      MONOKAI STYLE     */
/* ===================== */

body {
  margin: 0;
  padding: 0;
  background: #272822;
  color: #f8f8f2;
  font-family: 'Fira Code', monospace;
  font-size: 15px;
  line-height: 1.6;
  overflow: hidden;
}

h1, h2, h3 {
  font-weight: 400;
  letter-spacing: 2px;
  color: #66d9ef;
  text-align: center;
  text-shadow: 0 0 3px #66d9ef88;
}

a, button {
  font-family: inherit;
  color: #f92672;
  background: none;
  border: 1px solid #f92672;
  padding: 6px 14px;
  border-radius: 4px;
  cursor: pointer;
  transition: 0.2s ease-in-out;
}

a:hover, button:hover {
  background: #f92672;
  color: #272822;
  box-shadow: 0 0 8px #f9267288;
}

#sidebar {
  position: fixed;
  top: 0;
  right: 0;
  width: 250px;
  height: 100vh;
  background: #1e1f1c;
  color: #a6e22e;
  font-size: 14px;
  padding: 60px 20px 20px;
  overflow-y: auto;
  box-shadow: -2px 0 8px rgba(249, 38, 114, 0.3);
  z-index: 100;
}

#sidebar.hidden {
  transform: translateX(100%);
}

#toggleSidebar {
  position: fixed;
  top: 20px;
  right: 0;
  background: #f92672;
  color: #fff;
  border: none;
  border-radius: 8px 0 0 8px;
  padding: 10px 14px;
  font-size: 20px;
  cursor: pointer;
  box-shadow: 0 0 10px #f92672aa;
  z-index: 101;
}

#sidebar h3 {
  margin-top: 0;
  font-size: 16px;
  color: #f92672;
  margin-bottom: 10px;
  border-bottom: 1px solid #f92672;
  padding-bottom: 4px;
}

.sidebar-item span {
  float: right;
  color: #fd971f;
}

#modal {
  position: fixed;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  background: #1e1f1c;
  border: 2px solid #fd971f;
  padding: 30px;
  z-index: 10000;
  box-shadow: 0 0 20px #fd971f88;
  border-radius: 12px;
  display: none;
  max-width: 600px;
  color: #f8f8f2;
}

#modal.show {
  display: flex;
  flex-direction: column;
  transform: translate(-50%, -50%) scale(1.05);
}

svg {
  position: absolute;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  background: #272822;
}
.node {
  fill: #ffffff; /* or a bright color matching your theme */
  text-shadow: 1px 1px 3px rgba(0,0,0,0.8);
  font-weight: 500;
  stroke: rgba(0, 0, 0, 0.5);
  stroke-width: 0.2px;
  paint-order: stroke fill;
}

.node circle {
  stroke: #a6e22e;
  stroke-width: 2;
  fill: #3e3d32;
  filter: drop-shadow(0 0 3px #a6e22e88);
  transition: all 0.2s;
}

.node:hover circle {
  transform: scale(1.2);
  cursor: pointer;
  fill: #49483e;
}

.node.mainColor circle {
  fill: #75715e;
  stroke: #f92672;
  stroke-width: 3;
}

.node.sub:not(.done) circle {
  fill: #66d9ef;
}

.node.sub.done circle {
  fill: #3e3d32;
}

.node text.label {
  fill: #f8f8f2;
  font-size: 12px;
  pointer-events: none;
}

.node text.percent {
  fill: #fd971f;
  font-size: 10px;
  pointer-events: none;
}

.link.solid {
  stroke: #66d9ef;
  stroke-width: 2;
}

.link.dashed {
  stroke: #fd971f;
  stroke-width: 1.5;
  stroke-dasharray: 4 4;
  animation: dashmove 2s linear infinite;
}

@keyframes dashmove {
  to {
    stroke-dashoffset: -10;
  }
}

.badge-item {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 4px;
  width: 100px;
  background: #1e1f1c;
  border: 2px solid #66d9ef;
  border-radius: 10px;
  padding: 8px;
  box-shadow: 0 0 10px #66d9ef33;
}

.badge-item img {
  width: 100%;
  max-width: 100px;
  height: auto;
  object-fit: contain;
  border-radius: 4px;
}

.badge-item:hover {
  transform: scale(2.0);
  box-shadow: 0 0 20px #ff00ff44;
}

.badge-label {
  font-size: 12px;
  color: #a6e22e;
  text-align: center;
}

.badge-popup-centered {
  position: fixed;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  background: #1e1f1c;
  border: 2px solid #a6e22e;
  padding: 30px;
  z-index: 10000;
  box-shadow: 0 0 20px #a6e22e88;
  border-radius: 12px;
  color: #f8f8f2;
  font-family: 'Fira Code', monospace;
  text-align: center;
}

.close-btn {
  position: absolute;
  top: 6px;
  right: 10px;
  background: none;
  border: none;
  color: #f92672;
  font-size: 20px;
  cursor: pointer;
}

#statsModal {
  font-family: 'Fira Code', monospace;
  background-color: rgba(30, 31, 28, 0.95);
  border-left: 2px solid #66d9ef44;
}

#badgesDisplay {
  display: flex;
  flex-wrap: wrap;
  gap: 20px;
}

#xpContainer {
  padding: 10px;
  /* color: #00ffcc; */
  /* font-family: 'Share Tech Mono', monospace; */
  text-align: center;
  }
  
  #xpBarWrapper {
  width: 100%;
  background: #222;
  border: 1px solid #00ffcc;
  border-radius: 5px;
  overflow: hidden;
  margin-top: 5px;
  text-align: center;
  
  }
  
  #xpBar {
  height: 24px;
  background: linear-gradient(to right, #00ffcc, #00aa88);
  text-align: center;
  color: #000;
  font-weight: bold;
  line-height: 24px;
  }
  .ctf-link {
  /* color: #00ff66; */
  text-decoration: underline;
  cursor: pointer;
  }



  .custom-select {
    position: relative;
    width: 100%;
    /* font-family: 'Share Tech Mono', monospace; */
    user-select: none;
  }
  
  .selected {
    padding: 8px 12px;
    background: #101820;
    border: 2px solid #66d9ef;
    border-radius: 6px;
    color: #66d9ef;
    cursor: pointer;
    box-shadow: 0 0 12px rgba(0,255,102,0.4);
    transition: border-color 0.2s, box-shadow 0.2s;
  }
  
  .selected:hover {
    box-shadow: 0 0 16px #56b5c8;
    border-color: #56b5c8;
  }
  
  .options {
    display: none;
    position: absolute;
    top: 105%;
    left: 0;
    width: 100%;
    background: #0f1a0f;
    border: 2px solid #66d9ef;
    border-radius: 6px;
    z-index: 1000;
    box-shadow: 0 0 10px rgba(0,255,102,0.5);
  }
  
  .option {
    padding: 8px 12px;
    color: #66d9ef;
    cursor: pointer;
    transition: background 0.2s;
  }
  
  .option:hover, .option.selected {
    background: #66d9ef;
    color: #0f1a0f;
  }

  /* ===================== */
/* GRAPH STYLES      */
/* ===================== */

/* Remove or comment out the original .node circle rules */
/* .node circle { ... } */
/* .node:hover circle { ... } */
/* .node.mainColor circle { ... } */
/* .node.sub:not(.done) circle { ... } */
/* .node.sub.done circle { ... } */
/* .node.locked circle { ... } */ /* Monokai didn't have explicit locked styles before */

/* ADD/REPLACE Node Group Styling */
.node {
  cursor: pointer;
  filter: drop-shadow(0 0 6px #a6e22e); /* Monokai green glow */
  transition: filter 0.2s ease-out;
}
.node:hover {
    filter: drop-shadow(0 0 12px #a6e22e);
    /* No scaling on hover */
}

/* Target the hexagon shape */
.node polygon.node-shape {
  stroke: #a6e22e; /* Monokai green */
  stroke-width: 1.5;
  fill: #3e3d32; /* Monokai dark grey */
  transition: fill 0.2s ease-out;
}

.node:hover polygon.node-shape {
  fill: #49483e; /* Monokai lighter grey on hover */
}

/* Main node styling */
.node.mainColor polygon.node-shape {
  fill: #75715e; /* Monokai medium grey fill */
  stroke: #f92672; /* Monokai pink stroke */
  stroke-width: 2.5;
  filter: drop-shadow(0 0 8px #f92672); /* Main node pink glow */
}
.node.mainColor:hover {
     filter: drop-shadow(0 0 15px #f92672);
}

/* Sub node styling (default unlocked uses default node styles) */
.node.sub polygon.node-shape {
  /* Inherits default green stroke, grey fill */
  /* Optional: change stroke color if desired */
   stroke: #66d9ef; /* Use Monokai cyan for sub nodes */
   filter: drop-shadow(0 0 6px #66d9ef);
}
.node.sub:hover {
      filter: drop-shadow(0 0 12px #66d9ef);
}

/* Done sub node styling */
.node.sub.done polygon.node-shape {
  stroke: #66d9ef; /* Keep cyan stroke */
  fill: #c7be58; /* Dark fill when done */
  opacity: 0.8;
}
.node.sub.done:hover {
     filter: drop-shadow(0 0 12px #66d9ef);
}
.node.sub.done:hover polygon.node-shape {
    fill: #49483e; /* Hover fill */
}

/* Start node styling */
.node.start polygon.node-shape {
    stroke: #e6db74; /* Monokai yellow */
    stroke-width: 3;
    fill: #49483e; /* Grey fill */
    filter: drop-shadow(0 0 10px #e6db74);
}
.node.start:hover {
     filter: drop-shadow(0 0 16px #e6db74);
}

/* Locked node styling */
.node.locked polygon.node-shape {
    stroke: #75715e; /* Dim grey */
    fill: #272822; /* Background color fill */
    stroke-dasharray: 3 3;
     filter: drop-shadow(0 0 4px #75715e);
}
.node.locked {
    cursor: not-allowed;
    filter: drop-shadow(0 0 4px #75715e);
}
.node.locked:hover {
    filter: drop-shadow(0 0 4px #75715e); /* No change */
}
.node.locked:hover polygon.node-shape {
     fill: #272822; /* No change */
}
.node.locked text {
    fill: #75715e; /* Dim text */
    text-shadow: none;
}


/* Undiscovered node styling */
.node.undiscovered {
    opacity: 0.5;
    pointer-events: none;
     filter: none;
}
.node.undiscovered polygon.node-shape {
    fill: #272822;
    stroke: #75715e;
     filter: none;
}


/* Node Label styling */
.node text.label {
  fill: #f8f8f2; /* Monokai default text */
  font-size: 11px;
  font-weight: bold;
  pointer-events: none;
  text-shadow: 0 0 3px #000, 0 0 5px #000; /* Black shadow */
  dominant-baseline: middle;
  transform: translateY(1px);
}
.node.mainColor text.label {
    font-size: 13px;
    fill: #f8f8f2;
}
.node.locked text.label {
    fill: #75715e; /* Dim locked text */
}

/* ADD Percentage Text Styling */
.node text.percent {
    fill: #fd971f; /* Monokai orange */
    font-size: 10px;
    font-family: monospace;
    pointer-events: none;
    text-shadow: 0 0 3px #000;
}
.node.locked text.percent {
    fill: #75715e; /* Dim percentage on locked nodes */
}


/* Link Styling */
.links line { /* Added class to group */
    stroke-opacity: 0.4;
    transition: stroke-opacity 0.2s;
}

.link.solid {
  stroke: #66d9ef; /* Monokai cyan */
  stroke-width: 1.5px;
  stroke-opacity: 0.7;
}

.link.dashed {
  stroke: #fd971f; /* Monokai orange */
  stroke-width: 1px;
  stroke-dasharray: 5 5;
  stroke-opacity: 0.5;
 /* animation: dashmove 2s linear infinite; */ /* Optional */
}

/* ===================== */
/* SIDEBAR STYLES    */
/* ===================== */

#sidebar {
  position: fixed;
  top: 0;
  right: 0;
  width: 250px; /* Adjust if width changed */
  height: 100vh;
  background: #1e1f1c;
  color: #a6e22e; /* Monokai green for text */
  font-size: 14px;
  padding: 60px 20px 20px;
  overflow-y: auto;
  box-shadow: -2px 0 8px rgba(249, 38, 114, 0.3); /* Pink shadow */
  z-index: 100;
  /* REMOVE transition: transform 0.3s ease; */
  /* REPLACE .hidden logic with transform */
  transform: translateX(100%); /* Hidden by default */
  transition: transform 0.3s ease-in-out; /* Transition the transform */
}

/* REMOVE this rule */
/* #sidebar.hidden {
  transform: translateX(100%);
} */

/* ADD this rule to show the sidebar */
#sidebar.visible {
  transform: translateX(0);
}

#toggleSidebar {
  position: fixed;
  top: 20px;
   /* ADJUST initial right position slightly */
  right: 15px;
  background: #f92672; /* Monokai pink */
  color: #fff;
  border: none;
  border-radius: 4px; /* Use consistent radius */
  padding: 8px 12px; /* Use consistent padding */
  font-size: 24px;
  cursor: pointer;
  box-shadow: -2px 2px 8px rgba(0,0,0,0.3), 0 0 10px #f92672aa; /* Adjusted shadow */
  z-index: 101;
  /* ADD transition for movement */
  transition: transform 0.3s ease-in-out;
}

/* ADD rule to move button when sidebar is visible */
#sidebar.visible + #toggleSidebar {
    /* Adjust value based on sidebar width (250px) + desired gap (e.g., 10px) */
    transform: translateX(-260px);
}